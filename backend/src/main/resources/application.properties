spring.application.name=backend

# PostgreSQL Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate (JPA ORM)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Google OAuth Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

# GitHub OAuth Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email

# Flyway (Database Migration)
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.createSchemas=true
spring.flyway.baselineOnMigrate=true

server.port=${SERVER_PORT}
server.ssl.key-store=${SSL_KEYSTORE_PATH}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE}
server.ssl.key-alias=${SSL_KEY_ALIAS}

# Docker and Flyway Configuration
spring.docker.compose.enabled=false
spring.flyway.baseline-version=1
spring.flyway.url=${DB_URL}
spring.flyway.user=${DB_USERNAME}
spring.flyway.password=${DB_PASSWORD}

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc.core=TRACE
logging.level.org.flywaydb=DEBUG
logging.level.root=INFO
logging.level.com.ego.ethicai=DEBUG

# Hibernate Configuration
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.validator.apply_to_ddl=false

# AWS S3 Configuration
aws.s3.accessKey=${AWS_ACCESS_KEY}
aws.s3.secretKey=${AWS_SECRET_KEY}
aws.s3.bucketName=${AWS_S3_BUCKET}
aws.s3.region=${AWS_REGION}

# FAISS Configuration
faiss.index.path=/path/to/faiss/index  

# OpenAI API Key
openai.api.key=${OPENAI_API_KEY}

# AI Agent Configuration
ai.agent.url=${AI_AGENT_URL}

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION_MS}

# Server Configuration
server.port=8443
server.ssl.enabled=false
server.error.include-message=always
server.error.include-binding-errors=always

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.exposed-headers=Authorization
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Security Configuration
spring.security.filter.order=10
security.require-ssl=false

# Frontend Configuration
frontend.url=${FRONTEND_URL:http://localhost:5173}

# Email Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.debug=${MAIL_DEBUG}